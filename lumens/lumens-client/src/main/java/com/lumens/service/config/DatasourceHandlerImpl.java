/*
 * File:           DatasourceHandlerImpl.java
 * Date:           November 19, 2012  5:48 PM
 *
 * @author  washaofe
 * @version generated by NetBeans XML module
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lumens.service.config;

import com.lumens.client.rpc.beans.ComponentParameter;
import com.lumens.client.rpc.beans.ComponentRegistry;
import java.util.List;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;

/**
 *
 * @author shaofeng wang (shaofeng.cjpw@gmail.com)
 */
public class DatasourceHandlerImpl implements DatasourceHandler
{
    public static final boolean DEBUG = false;
    private List<ComponentRegistry> datasourceConfig;
    private ComponentRegistry currentComponent;

    DatasourceHandlerImpl(List<ComponentRegistry> datasourceConfig)
    {
        this.datasourceConfig = datasourceConfig;
    }

    @Override
    public void start_Datasource(final Attributes meta) throws SAXException
    {
        currentComponent = new ComponentRegistry();
    }

    @Override
    public void end_Datasource() throws SAXException
    {
        datasourceConfig.add(currentComponent);
        currentComponent = null;
    }

    @Override
    public void start_Parameters(final Attributes meta) throws SAXException
    {
    }

    @Override
    public void end_Parameters() throws SAXException
    {
    }

    @Override
    public void start_Datasources(final Attributes meta) throws SAXException
    {
    }

    @Override
    public void end_Datasources() throws SAXException
    {
    }

    @Override
    public void handle_ID(final String data, final Attributes meta) throws SAXException
    {
        currentComponent.setId(data);
    }

    @Override
    public void handle_Name(final String data, final Attributes meta) throws SAXException
    {
        currentComponent.setName(data);
    }

    @Override
    public void handle_ClassName(final String data, final Attributes meta) throws SAXException
    {
        currentComponent.setClassName(data);
    }

    @Override
    public void handle_Icon(String data, Attributes meta) throws SAXException
    {
        currentComponent.setIcon(data);
    }

    @Override
    public void handle_ComponentIcon(String data, Attributes meta) throws SAXException
    {
        currentComponent.setComponentIcon(data);
    }

    @Override
    public void handle_Parameter(final Attributes meta) throws SAXException
    {
        ComponentParameter param = new ComponentParameter();
        Object value = meta.getValue("id");
        if (value != null)
            param.setId((String) value);
        value = meta.getValue("name");
        if (value != null)
            param.setName((String) value);
        value = meta.getValue("javatype");
        if (value != null)
            param.setJavatype((String) value);
        value = meta.getValue("encrypted");
        if (value != null)
            param.setEncrypted(Boolean.parseBoolean((String) value));
        this.currentComponent.addParameter(param);
    }
}
